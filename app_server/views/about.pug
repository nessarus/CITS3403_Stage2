extends layout

block content
  section
    h2 About
    p
      | Our Group:
      br
      | Mia wolski: 22260881
      br
      | Joshua Ng: 20163079
      br
      | Conor Smith: 21959981
      br
      br
      | Architecture:
      br
      | We used MEAN stack: Mongoose, Express, Javascript and NodeJS.
      br
      | We set up the app server by routes, controller, model, test and views
      br
      | - Routes controlled the web pages pathing.
      br
      | - Models controlled the Database Schema for our users' accounts, projects and databases.
      br
      | - Controllers were used to setup the logic of saving and loading user data and webpages.
      br
      | - View were used to display the html pages. We used pug for flow control and sorting the priorities of user tasks.
      br
      br
      | The Website:
      br
      | We divided the website into pages: Home, My Projects, Create Projects, Chat, About, Register and About.
      br
      |Register user page is generate user data to be used in parts of the website such as login.
      br
      |My projects shows the projects for the users, that they are a part of.
      br
      |Each project in 'My Projects' links to its own page contianing its tasks
      br
      |The page to create projects and view created projects are split up for easy of use and accessability.
      br
      |We combined all our webpages together to form the basis of the project2 website. Chat is on its own page as it seems easier and more convinent.
      |login/logout and Register/My profile change visibliltiy depending on if the user is logged in or not
      br
      |Most pages can only be accessable using a valid user login, if a user isnt logged in they are directed to the login page.
      br
      |the MEAN architeture was used, monogoose data is stored online hosted by mlabs.
      br
      |Sorting is done by priority of the tasks stated then by their date automatically.
      
